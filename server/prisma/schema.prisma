// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Admin {
    id            Int            @id @default(autoincrement())
    email         String         @unique
    password_hash String
    created_at    DateTime       @default(now())
    updated_at    DateTime       @updatedAt
    events        Event[]
    Announcement  Announcement[]
}

model Event {
    id                Int            @id @default(autoincrement())
    name              String
    description       String
    date              DateTime
    venue             String
    participant_limit Int
    created_at        DateTime       @default(now())
    updated_at        DateTime       @updatedAt
    adminId           Int
    admin             Admin          @relation(fields: [adminId], references: [id])
    StudentEvent      StudentEvent[]
}

model Student {
    id                  Int                   @id @default(autoincrement())
    name                String
    group               String
    email               String                @unique
    password_hash       String
    temp_password       Boolean               @default(true)
    batch               Int
    created_at          DateTime              @default(now())
    updated_at          DateTime              @updatedAt
    Note                Note[]
    AnnouncementStudent AnnouncementStudent[]
    StudentEvent        StudentEvent[]
}

model Note {
    id         Int      @id @default(autoincrement())
    title      String
    subject    String
    content    String
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
    ownerId    Int
    owner      Student  @relation(fields: [ownerId], references: [id])
}

model Announcement {
    id                  Int                   @id @default(autoincrement())
    title               String
    content             String
    created_at          DateTime              @default(now())
    updated_at          DateTime              @updatedAt
    adminId             Int
    admin               Admin                 @relation(fields: [adminId], references: [id])
    AnnouncementStudent AnnouncementStudent[]
}

model AnnouncementStudent {
    id Int @id @default(autoincrement())

    announcementId Int
    announcement   Announcement @relation(fields: [announcementId], references: [id])

    studentId Int
    student   Student @relation(fields: [studentId], references: [id])

    isRead Boolean @default(false)

    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
}

model StudentEvent {
    id Int @id @default(autoincrement())

    studentId Int
    student   Student @relation(fields: [studentId], references: [id])

    eventId Int
    event   Event @relation(fields: [eventId], references: [id])

    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
}

model Timetable {
    id        Int      @id @default(autoincrement())
    groupCode String
    day       String
    subject   String
    startTime String
    endTime   String
    room      String?
    teacher   String?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([groupCode])
}
